// This file is provided under The MIT License as part of Steamworks.NET.
// Copyright (c) 2013-2018 Riley Labrecque
// Please see the included LICENSE.txt for additional information.

// This file is automatically generated.
// Changes to this file will be reverted when you update Steamworks.NET

#if UNITY_ANDROID || UNITY_IOS || UNITY_TIZEN || UNITY_TVOS || UNITY_WEBGL || UNITY_WSA || UNITY_PS4 || UNITY_WII || UNITY_XBOXONE || UNITY_SWITCH
#define DISABLESTEAMWORKS
#endif

#if !DISABLESTEAMWORKS

using System;
using System.Net;
using System.Runtime.InteropServices;
using IntPtr = System.IntPtr;

namespace Steamworks
{
    [StructLayout(LayoutKind.Sequential, Pack = 1)]
    public struct SteamNetworkingIPAddr
    {
        public IPv6Address IPAddress;
        public ushort Port;

        /// <summary>
        /// Gets value indicating whether it's IPv4 address.
        /// </summary>
        public bool IsIPv4
        {
            get { return IPAddress.IsIPv4; }
        }

        /// <summary>
        /// Gets value indicating whether IP address is IPv4 or IPv6 localhost.
        /// </summary>
        public bool IsLocalhost
        {
            get { return IPAddress.IsLocalhost; }
        }

        /// <summary>
        /// Gets or sets IPv4 address.
        /// Use <see cref="IsIPv4"/> to make sure it's valid IPv4 address and not last 4 bytes of IPv6.
        /// </summary>
        public IPv4Address IPv4
        {
            get { return IPAddress.IPv4; }
            set { IPAddress = new IPv6Address(value); }
        }

        /// <summary>
        /// Initializes a new IPv6 SteamNetworkingIPAddr.
        /// </summary>
        public SteamNetworkingIPAddr(IPv6Address ip, ushort port)
        {
            IPAddress = ip;
            Port = port;
        }

        /// <summary>
        /// Initializes a new IPv4 SteamNetworkingIPAddr.
        /// </summary>
        public SteamNetworkingIPAddr(IPv4Address ip, ushort port)
        {
            IPAddress = new IPv6Address(ip);
            Port = port;
        }

        /// <summary>
        /// Initializes a new IPv4 SteamNetworkingIPAddr.
        /// </summary>
        public SteamNetworkingIPAddr(byte a, byte b, byte c, byte d, ushort port)
        {
            IPAddress = new IPv6Address(new IPv4Address(a, b, c, d));
            Port = port;
        }

        public override string ToString()
        {
            return (IsIPv4 ? IPv4.ToString() : IPAddress.ToString()) + ":" + Port;
        }
    }
}

#endif //!DISABLESTEAMWORKS