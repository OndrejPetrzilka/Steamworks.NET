// This file is provided under The MIT License as part of Steamworks.NET.
// Copyright (c) 2013-2018 Riley Labrecque
// Please see the included LICENSE.txt for additional information.

// This file is automatically generated.
// Changes to this file will be reverted when you update Steamworks.NET

#if UNITY_ANDROID || UNITY_IOS || UNITY_TIZEN || UNITY_TVOS || UNITY_WEBGL || UNITY_WSA || UNITY_PS4 || UNITY_WII || UNITY_XBOXONE || UNITY_SWITCH
#define DISABLESTEAMWORKS
#endif

#if !DISABLESTEAMWORKS

using System;
using System.Runtime.InteropServices;
using IntPtr = System.IntPtr;

namespace Steamworks
{
    /// Different methods of describing the identity of a network host
    public enum ESteamNetworkingIdentityType
    {
        // Dummy/unknown/invalid
        k_ESteamNetworkingIdentityType_Invalid = 0,

        //
        // Basic platform-specific identifiers.
        //
        k_ESteamNetworkingIdentityType_SteamID = 16, // 64-bit CSteamID
        k_ESteamNetworkingIdentityType_XboxPairwiseID = 17, // Publisher-specific user identity, as string
                                                            //k_ESteamNetworkingIdentityType_PlaystationSomething = 18,

        //
        // Special identifiers.
        //

        // Use their IP address (and port) as their "identity".
        // These types of identities are always unauthenticated.
        // They are useful for porting plain sockets code, and other
        // situations where you don't care about authentication.  In this
        // case, the local identity will be "localhost",
        // and the remote address will be their network address.
        //
        // We use the same type for either IPv4 or IPv6, and
        // the address is always store as IPv6.  We use IPv4
        // mapped addresses to handle IPv4.
        k_ESteamNetworkingIdentityType_IPAddress = 1,

        // Generic string/binary blobs.  It's up to your app to interpret this.
        // This library can tell you if the remote host presented a certificate
        // signed by somebody you have chosen to trust, with this identity on it.
        // It's up to you to ultimately decide what this identity means.
        k_ESteamNetworkingIdentityType_GenericString = 2,
        k_ESteamNetworkingIdentityType_GenericBytes = 3,

        // Make sure this enum is stored in an int.
        k_ESteamNetworkingIdentityType__Force32bit = 0x7fffffff,
    };
}

#endif //!DISABLESTEAMWORKS